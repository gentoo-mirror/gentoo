From 0b33823e00e98fe905fcbc1b2a2fc4c8d521be2d Mon Sep 17 00:00:00 2001
From: Andreas Sturmlechner <asturm@gentoo.org>
Date: Thu, 22 Oct 2020 23:32:33 +0200
Subject: [PATCH] Use >=dev-libs/libzip-1.7.2 cmake config

Signed-off-by: Andreas Sturmlechner <asturm@gentoo.org>
---
 CMakeLists.txt                            |  2 +-
 cmake/FindLibZip.cmake                    | 36 --------------
 cmake/FindPackageHandleStandardArgs.cmake | 58 -----------------------
 src/libepub/CMakeLists.txt                |  2 +-
 4 files changed, 2 insertions(+), 96 deletions(-)
 delete mode 100644 cmake/FindLibZip.cmake
 delete mode 100644 cmake/FindPackageHandleStandardArgs.cmake

diff --git a/CMakeLists.txt b/CMakeLists.txt
index fc141c2..691cf2b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,7 +11,7 @@ set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
 set(LIB_SUFFIX "" CACHE STRING "Define suffix of library directory name (32/64)")
 
 find_package(LibXml2 REQUIRED)
-find_package(LibZip REQUIRED)
+find_package(LibZip 1.7.2 CONFIG REQUIRED)
 
 if(CMAKE_C_COMPILER_ID MATCHES GNU)
   set(CMAKE_C_FLAGS "-Wall -W -Wno-long-long -Wundef -Wcast-align -Werror-implicit-function-declaration -Wchar-subscripts -Wpointer-arith -Wwrite-strings -Wformat-security -Wmissing-format-attribute -Wshadow -fno-common ${CMAKE_C_FLAGS}")
diff --git a/cmake/FindLibZip.cmake b/cmake/FindLibZip.cmake
deleted file mode 100644
index c873092..0000000
--- a/cmake/FindLibZip.cmake
+++ /dev/null
@@ -1,36 +0,0 @@
-# - Try to find libzip
-# Once done this will define
-#
-#  LIBZIP_FOUND - system has the zip library
-#  LIBZIP_INCLUDE_DIR - the zip include directory
-#  LIBZIP_LIBRARY - Link this to use the zip library
-#
-# Copyright (c) 2006, Pino Toscano, <toscano.pino@tiscali.it>
-#
-# Redistribution and use is allowed according to the terms of the BSD license.
-# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
-
-if (LIBZIP_LIBRARY AND LIBZIP_INCLUDE_DIR)
-  # in cache already
-  set(LIBZIP_FOUND TRUE)
-else (LIBZIP_LIBRARY AND LIBZIP_INCLUDE_DIR)
-
-  find_path(LIBZIP_INCLUDE_DIR zip.h
-    ${GNUWIN32_DIR}/include
-  )
-
-  find_library(LIBZIP_LIBRARY NAMES zip
-    PATHS
-    ${GNUWIN32_DIR}/lib
-  )
-
-  include(FindPackageHandleStandardArgs)
-  FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibZip DEFAULT_MSG LIBZIP_LIBRARY LIBZIP_INCLUDE_DIR)
-
-    # ensure that they are cached
-    set(LIBZIP_INCLUDE_DIR ${LIBZIP_INCLUDE_DIR} CACHE INTERNAL "The libzip include path")
-    set(LIBZIP_LIBRARY ${LIBZIP_LIBRARY} CACHE INTERNAL "The libraries needed to use libzip")
-
-endif (LIBZIP_LIBRARY AND LIBZIP_INCLUDE_DIR)
-
-mark_as_advanced(LIBZIP_INCLUDE_DIR LIBZIP_LIBRARY)
diff --git a/cmake/FindPackageHandleStandardArgs.cmake b/cmake/FindPackageHandleStandardArgs.cmake
deleted file mode 100644
index 151d812..0000000
--- a/cmake/FindPackageHandleStandardArgs.cmake
+++ /dev/null
@@ -1,58 +0,0 @@
-# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|"Custom failure message") VAR1 ... )
-#    This macro is intended to be used in FindXXX.cmake modules files.
-#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and
-#    it also sets the <UPPERCASED_NAME>_FOUND variable.
-#    The package is found if all variables listed are TRUE.
-#    Example:
-#
-#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)
-#
-#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and 
-#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.
-#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, 
-#    independent whether QUIET was used or not.
-#    If it is found, the location is reported using the VAR1 argument, so 
-#    here a message "Found LibXml2: /usr/lib/libxml2.so" will be printed out.
-#    If the second argument is DEFAULT_MSG, the message in the failure case will 
-#    be "Could NOT find LibXml2", if you don't like this message you can specify
-#    your own custom failure message there.
-
-MACRO(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FAIL_MSG _VAR1 )
-
-  IF("${_FAIL_MSG}" STREQUAL "DEFAULT_MSG")
-    IF (${_NAME}_FIND_REQUIRED)
-      SET(_FAIL_MESSAGE "Could not find REQUIRED package ${_NAME}")
-    ELSE (${_NAME}_FIND_REQUIRED)
-      SET(_FAIL_MESSAGE "Could not find OPTIONAL package ${_NAME}")
-    ENDIF (${_NAME}_FIND_REQUIRED)
-  ELSE("${_FAIL_MSG}" STREQUAL "DEFAULT_MSG")
-    SET(_FAIL_MESSAGE "${_FAIL_MSG}")
-  ENDIF("${_FAIL_MSG}" STREQUAL "DEFAULT_MSG")
-
-  STRING(TOUPPER ${_NAME} _NAME_UPPER)
-
-  SET(${_NAME_UPPER}_FOUND TRUE)
-  IF(NOT ${_VAR1})
-    SET(${_NAME_UPPER}_FOUND FALSE)
-  ENDIF(NOT ${_VAR1})
-
-  FOREACH(_CURRENT_VAR ${ARGN})
-    IF(NOT ${_CURRENT_VAR})
-      SET(${_NAME_UPPER}_FOUND FALSE)
-    ENDIF(NOT ${_CURRENT_VAR})
-  ENDFOREACH(_CURRENT_VAR)
-
-  IF (${_NAME_UPPER}_FOUND)
-    IF (NOT ${_NAME}_FIND_QUIETLY)
-        MESSAGE(STATUS "Found ${_NAME}: ${${_VAR1}}")
-    ENDIF (NOT ${_NAME}_FIND_QUIETLY)
-  ELSE (${_NAME_UPPER}_FOUND)
-    IF (${_NAME}_FIND_REQUIRED)
-        MESSAGE(FATAL_ERROR "${_FAIL_MESSAGE}")
-    ELSE (${_NAME}_FIND_REQUIRED)
-      IF (NOT ${_NAME}_FIND_QUIETLY)
-        MESSAGE(STATUS "${_FAIL_MESSAGE}")
-      ENDIF (NOT ${_NAME}_FIND_QUIETLY)
-    ENDIF (${_NAME}_FIND_REQUIRED)
-  ENDIF (${_NAME_UPPER}_FOUND)
-ENDMACRO(FIND_PACKAGE_HANDLE_STANDARD_ARGS)
diff --git a/src/libepub/CMakeLists.txt b/src/libepub/CMakeLists.txt
index a3208b7..460270c 100644
--- a/src/libepub/CMakeLists.txt
+++ b/src/libepub/CMakeLists.txt
@@ -1,6 +1,6 @@
 include_directories (${EBOOK-TOOLS_SOURCE_DIR}/src/libepub ${LIBXML2_INCLUDE_DIR} ${LIBZIP_INCLUDE_DIR})
 add_library (epub SHARED epub.c ocf.c opf.c linklist.c list.c)
-target_link_libraries (epub ${LIBZIP_LIBRARY} ${LIBXML2_LIBRARIES})
+target_link_libraries (epub libzip::zip ${LIBXML2_LIBRARIES})
 
 set_target_properties (epub PROPERTIES VERSION 0.2.1 SOVERSION 0)
 
-- 
2.49.0

