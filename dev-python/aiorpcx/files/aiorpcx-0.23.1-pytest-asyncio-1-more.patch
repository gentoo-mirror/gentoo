From b973b9b5612a47fe6311b43a4a4a2227b179d9b0 Mon Sep 17 00:00:00 2001
From: f321x <felb@tuta.io>
Date: Thu, 16 Jan 2025 12:04:06 +0100
Subject: [PATCH 1/2] bump ws version to 14 and python version to 3.9

remove venv

bump ws version to 14 and python version to 3.9

remove .idea

bump ws version to 14 and python version to 3.9
---
 tests/test_websocket.py | 17 +++++------------
 1 file changed, 5 insertions(+), 12 deletions(-)

diff --git a/tests/test_websocket.py b/tests/test_websocket.py
index a0d268d..97b049c 100755
--- a/tests/test_websocket.py
+++ b/tests/test_websocket.py
@@ -7,19 +7,12 @@ from aiorpcx import connect_ws, NetAddress, serve_ws
 from test_session import MyServerSession
 
 
-@pytest.fixture
-def ws_server(unused_tcp_port, event_loop):
-    coro = serve_ws(MyServerSession, 'localhost', unused_tcp_port)
-    server = event_loop.run_until_complete(coro)
+@pytest.fixture(scope="function")
+async def ws_server(unused_tcp_port, event_loop):
+    server = await serve_ws(MyServerSession, 'localhost', unused_tcp_port)
     yield f'ws://localhost:{unused_tcp_port}'
-    tasks = asyncio.all_tasks(event_loop)
-
-    async def close_all():
-        server.close()
-        await server.wait_closed()
-        if tasks:
-            await asyncio.wait(tasks)
-    event_loop.run_until_complete(close_all())
+    server.close()
+    await server.wait_closed()
 
 
 @pytest.mark.filterwarnings("ignore:'with .*:DeprecationWarning")
From b3fe21c9ad6f21967b31422174ab648263d6d4d7 Mon Sep 17 00:00:00 2001
From: Neil Booth <kyuupichan@pm.me>
Date: Thu, 16 Jan 2025 11:51:14 +0000
Subject: [PATCH 2/2] Further tweaks.

---
 tests/test_websocket.py | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/tests/test_websocket.py b/tests/test_websocket.py
index 97b049c..9a8f77a 100755
--- a/tests/test_websocket.py
+++ b/tests/test_websocket.py
@@ -1,5 +1,3 @@
-import asyncio
-
 import pytest
 
 from aiorpcx import connect_ws, NetAddress, serve_ws
@@ -8,7 +6,7 @@ from test_session import MyServerSession
 
 
 @pytest.fixture(scope="function")
-async def ws_server(unused_tcp_port, event_loop):
+async def ws_server(unused_tcp_port):
     server = await serve_ws(MyServerSession, 'localhost', unused_tcp_port)
     yield f'ws://localhost:{unused_tcp_port}'
     server.close()
